
# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  snyk: snyk/snyk@1.1.2
jobs:
    build:
        docker:
            - image: circleci/node:12
        steps:
            - checkout
            - run: npm install --force
            - run: npm update
            - run: #install script to generate Snyk results in HTML format
                name: install-snyk-to-html 
                command: npm install snyk-to-html -g
            - snyk/scan: #SCA scan
                fail-on-issues: false
                monitor-on-build: true
                token-variable: SNYK_TOKEN
                additional-arguments: --json | snyk-to-html -o sca_results.html #--json > sca_results.html
            - store_artifacts: #store SCA HTML artifact
                path: sca_results.html
                destination: sca_results.html
            - snyk/scan: #Code scan
                fail-on-issues: false
                monitor-on-build: false
                token-variable: SNYK_TOKEN
                additional-arguments: --code --json | snyk-to-html -o code_results.html #--code --json > output.json
            - store_artifacts: #store HTML output from custom script
                path: code_results.html
                destination: code_results.html
            - snyk/scan: #container scan
                fail-on-issues: false
                monitor-on-build: true
                token-variable: SNYK_TOKEN
                additional-arguments: --container amitsnyk/snyk-juice-shop:latest --json > container_results.json #replace amitsnyk/snyk-juice-shop:latest with your image name.
            - store_artifacts: #store container json output generated by snyk
                path: container_results.json
                destination: container_results.json
            - snyk/scan: #IaC scan
                fail-on-issues: false
                monitor-on-build: false
                token-variable: SNYK_TOKEN
                additional-arguments: --iac --json > iac_results.json
            - store_artifacts: #store iac json output generated by snyk
                path: iac_results.json
                destination: iac_results.json
        workflows: null
