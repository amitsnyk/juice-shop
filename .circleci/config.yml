# A nodeJS circleCI script that leverages the Snyk CLI tool to conduct SCA, Code, Container, and IaC scans. HTML artifacts are generated for all the scans using snyk-to-html.
version: 2.1

jobs:
    build:
        docker:
            - image: circleci/node:latest
        steps:
            - checkout
            #- run: npm install --force
            #- run: npm update
            #install Snyk CLI tool and snyk-to-html + authenticate into Snyk
            - run: | 
                curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
                chmod +x ./snyk
                curl -L https://github.com/snyk/snyk-to-html/releases/download/v2.3.1/snyk-to-html-linux -o snyk-to-html
                chmod +x ./snyk-to-html
                ./snyk auth $SNYK_TOKEN

            # SCA scan with severity threshold set to high
            - run: |
                if ./snyk test --severity-threshold=high --json | ./snyk-to-html -o sca_results.html ; then
                    echo "SCA test passed successfully"
                    echo 'export sca_exit_code=0' >> $BASH_ENV
                else
                    echo 'export sca_exit_code=1' >> $BASH_ENV
                fi
            - store_artifacts:
                path: sca_results.html
                destination: sca_results.html
               
            # SAST code scan   
            - run: |
                if ./snyk code test --json | ./snyk-to-html -o code_results.html ; then
                    echo "SAST test passed successfully"
                    echo 'export sast_exit_code=0' >> $BASH_ENV
                else
                    echo 'export sast_exit_code=1' >> $BASH_ENV
                fi
            - store_artifacts:
                path: code_results.html
                destination: code_results.html
            
            # Container image scan - replace amitsnyk/snyk-juice-shop:latest with your registry/image_name:tag.
            - run: |
                if ./snyk container test amitsnyk/snyk-juice-shop:latest --json | ./snyk-to-html -o container_results.html ; then
                    echo "Container test passed successfully"
                    echo 'export container_exit_code=0' >> $BASH_ENV
                else
                    echo 'export container_exit_code=1' >> $BASH_ENV
                fi
            - store_artifacts: #store container json output generated by Snyk
                path: container_results.html
                destination: container_results.html
            
            # IaC scan
            - run: |
                if ./snyk iac test --json | ./snyk-to-html -o iac_results.html ; then
                    echo "IaC test passed successfully"
                    echo 'export iac_exit_code=0' >> $BASH_ENV
                else
                    echo 'export iac_exit_code=1' >> $BASH_ENV
                fi
            - store_artifacts: #store iac json output generated by Snyk
                path: iac_results.html
                destination: iac_results.html
            
            #Fail build if any tests failed
            - run: |
                if [[ "$sca_exit_code" -eq 1 || "$sast_exit_code" -eq 1 || "$container_exit_code" -eq 1 || "$iac_exit_code" -eq 1 ]]; then
                    echo "One or more tests failed"
                    exit 1
                else
                    echo "All tests passed successfully"
                    exit 0
                fi

        workflows: null
